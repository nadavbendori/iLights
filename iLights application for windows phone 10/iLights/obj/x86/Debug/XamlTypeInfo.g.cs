//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace iLights
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace iLights.iLights_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[28];
            _typeNameTable[0] = "iLights.AddPlayerPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "iLights.user";
            _typeNameTable[4] = "Microsoft.WindowsAzure.Storage.Table.TableEntity";
            _typeNameTable[5] = "Object";
            _typeNameTable[6] = "iLights.addTrainingPage";
            _typeNameTable[7] = "iLights.choosePlayerPageTraining";
            _typeNameTable[8] = "iLights.Training";
            _typeNameTable[9] = "System.Collections.Generic.List`1<iLights.Player>";
            _typeNameTable[10] = "iLights.Player";
            _typeNameTable[11] = "String";
            _typeNameTable[12] = "System.DateTimeOffset";
            _typeNameTable[13] = "System.ValueType";
            _typeNameTable[14] = "iLights.FocusTrainingxaml";
            _typeNameTable[15] = "iLights.inTraining";
            _typeNameTable[16] = "Int32";
            _typeNameTable[17] = "iLights.playersPage";
            _typeNameTable[18] = "System.Collections.Generic.List`1<iLights.Score>";
            _typeNameTable[19] = "iLights.Score";
            _typeNameTable[20] = "iLights.quickGamePage";
            _typeNameTable[21] = "iLights.signUpPage";
            _typeNameTable[22] = "iLights.chooseProgram";
            _typeNameTable[23] = "iLights.MainPage";
            _typeNameTable[24] = "iLights.topScoresPage";
            _typeNameTable[25] = "iLights.topScoresPageOfPlayer";
            _typeNameTable[26] = "iLights.trainingPage";
            _typeNameTable[27] = "System.Collections.Generic.List`1<iLights.Training>";

            _typeTable = new global::System.Type[28];
            _typeTable[0] = typeof(global::iLights.AddPlayerPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::iLights.user);
            _typeTable[4] = typeof(global::Microsoft.WindowsAzure.Storage.Table.TableEntity);
            _typeTable[5] = typeof(global::System.Object);
            _typeTable[6] = typeof(global::iLights.addTrainingPage);
            _typeTable[7] = typeof(global::iLights.choosePlayerPageTraining);
            _typeTable[8] = typeof(global::iLights.Training);
            _typeTable[9] = typeof(global::System.Collections.Generic.List<global::iLights.Player>);
            _typeTable[10] = typeof(global::iLights.Player);
            _typeTable[11] = typeof(global::System.String);
            _typeTable[12] = typeof(global::System.DateTimeOffset);
            _typeTable[13] = typeof(global::System.ValueType);
            _typeTable[14] = typeof(global::iLights.FocusTrainingxaml);
            _typeTable[15] = typeof(global::iLights.inTraining);
            _typeTable[16] = typeof(global::System.Int32);
            _typeTable[17] = typeof(global::iLights.playersPage);
            _typeTable[18] = typeof(global::System.Collections.Generic.List<global::iLights.Score>);
            _typeTable[19] = typeof(global::iLights.Score);
            _typeTable[20] = typeof(global::iLights.quickGamePage);
            _typeTable[21] = typeof(global::iLights.signUpPage);
            _typeTable[22] = typeof(global::iLights.chooseProgram);
            _typeTable[23] = typeof(global::iLights.MainPage);
            _typeTable[24] = typeof(global::iLights.topScoresPage);
            _typeTable[25] = typeof(global::iLights.topScoresPageOfPlayer);
            _typeTable[26] = typeof(global::iLights.trainingPage);
            _typeTable[27] = typeof(global::System.Collections.Generic.List<global::iLights.Training>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_AddPlayerPage() { return new global::iLights.AddPlayerPage(); }
        private object Activate_3_user() { return new global::iLights.user(); }
        private object Activate_4_TableEntity() { return new global::Microsoft.WindowsAzure.Storage.Table.TableEntity(); }
        private object Activate_6_addTrainingPage() { return new global::iLights.addTrainingPage(); }
        private object Activate_7_choosePlayerPageTraining() { return new global::iLights.choosePlayerPageTraining(); }
        private object Activate_8_Training() { return new global::iLights.Training(); }
        private object Activate_9_List() { return new global::System.Collections.Generic.List<global::iLights.Player>(); }
        private object Activate_10_Player() { return new global::iLights.Player(); }
        private object Activate_14_FocusTrainingxaml() { return new global::iLights.FocusTrainingxaml(); }
        private object Activate_15_inTraining() { return new global::iLights.inTraining(); }
        private object Activate_17_playersPage() { return new global::iLights.playersPage(); }
        private object Activate_18_List() { return new global::System.Collections.Generic.List<global::iLights.Score>(); }
        private object Activate_19_Score() { return new global::iLights.Score(); }
        private object Activate_20_quickGamePage() { return new global::iLights.quickGamePage(); }
        private object Activate_21_signUpPage() { return new global::iLights.signUpPage(); }
        private object Activate_22_chooseProgram() { return new global::iLights.chooseProgram(); }
        private object Activate_23_MainPage() { return new global::iLights.MainPage(); }
        private object Activate_24_topScoresPage() { return new global::iLights.topScoresPage(); }
        private object Activate_25_topScoresPageOfPlayer() { return new global::iLights.topScoresPageOfPlayer(); }
        private object Activate_26_trainingPage() { return new global::iLights.trainingPage(); }
        private object Activate_27_List() { return new global::System.Collections.Generic.List<global::iLights.Training>(); }
        private void VectorAdd_9_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::iLights.Player>)instance;
            var newItem = (global::iLights.Player)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::iLights.Score>)instance;
            var newItem = (global::iLights.Score)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::iLights.Training>)instance;
            var newItem = (global::iLights.Training)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::iLights.iLights_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  iLights.AddPlayerPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_AddPlayerPage;
                userType.AddMemberName("coach");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  iLights.user
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Microsoft.WindowsAzure.Storage.Table.TableEntity
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_TableEntity;
                userType.AddMemberName("PartitionKey");
                userType.AddMemberName("RowKey");
                userType.AddMemberName("Timestamp");
                userType.AddMemberName("ETag");
                xamlType = userType;
                break;

            case 5:   //  Object
                xamlType = new global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  iLights.addTrainingPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_6_addTrainingPage;
                userType.AddMemberName("coach");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  iLights.choosePlayerPageTraining
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_7_choosePlayerPageTraining;
                userType.AddMemberName("training");
                userType.AddMemberName("coach");
                userType.AddMemberName("players");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  iLights.Training
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity"));
                userType.Activator = Activate_8_Training;
                userType.AddMemberName("Name");
                userType.AddMemberName("Description");
                userType.AddMemberName("currentPlayer");
                userType.AddMemberName("Time");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.Generic.List`1<iLights.Player>
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_9_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  iLights.Player
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity"));
                userType.Activator = Activate_10_Player;
                userType.AddMemberName("Name");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  String
                xamlType = new global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  System.DateTimeOffset
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  System.ValueType
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 14:   //  iLights.FocusTrainingxaml
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_FocusTrainingxaml;
                userType.AddMemberName("coach");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  iLights.inTraining
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_inTraining;
                userType.AddMemberName("training");
                userType.AddMemberName("counter");
                userType.AddMemberName("coach");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  Int32
                xamlType = new global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  iLights.playersPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_playersPage;
                userType.AddMemberName("coach");
                userType.AddMemberName("players");
                userType.AddMemberName("scores");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.Generic.List`1<iLights.Score>
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_18_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  iLights.Score
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity"));
                userType.Activator = Activate_19_Score;
                userType.AddMemberName("trainingName");
                userType.AddMemberName("trainingScore");
                userType.AddMemberName("playerName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  iLights.quickGamePage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_quickGamePage;
                userType.AddMemberName("counter");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  iLights.signUpPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_signUpPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  iLights.chooseProgram
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_22_chooseProgram;
                userType.AddMemberName("coach");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  iLights.MainPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  iLights.topScoresPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_topScoresPage;
                userType.AddMemberName("coach");
                userType.AddMemberName("training");
                userType.AddMemberName("scores");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  iLights.topScoresPageOfPlayer
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_25_topScoresPageOfPlayer;
                userType.AddMemberName("coach");
                userType.AddMemberName("scores");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  iLights.trainingPage
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_trainingPage;
                userType.AddMemberName("coach");
                userType.AddMemberName("trainings");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  System.Collections.Generic.List`1<iLights.Training>
                userType = new global::iLights.iLights_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_27_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_AddPlayerPage_coach(object instance)
        {
            var that = (global::iLights.AddPlayerPage)instance;
            return that.coach;
        }
        private void set_0_AddPlayerPage_coach(object instance, object Value)
        {
            var that = (global::iLights.AddPlayerPage)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_1_addTrainingPage_coach(object instance)
        {
            var that = (global::iLights.addTrainingPage)instance;
            return that.coach;
        }
        private void set_1_addTrainingPage_coach(object instance, object Value)
        {
            var that = (global::iLights.addTrainingPage)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_2_choosePlayerPageTraining_training(object instance)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            return that.training;
        }
        private void set_2_choosePlayerPageTraining_training(object instance, object Value)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            that.training = (global::iLights.Training)Value;
        }
        private object get_3_choosePlayerPageTraining_coach(object instance)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            return that.coach;
        }
        private void set_3_choosePlayerPageTraining_coach(object instance, object Value)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_4_choosePlayerPageTraining_players(object instance)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            return that.players;
        }
        private void set_4_choosePlayerPageTraining_players(object instance, object Value)
        {
            var that = (global::iLights.choosePlayerPageTraining)instance;
            that.players = (global::System.Collections.Generic.List<global::iLights.Player>)Value;
        }
        private object get_5_Player_Name(object instance)
        {
            var that = (global::iLights.Player)instance;
            return that.Name;
        }
        private void set_5_Player_Name(object instance, object Value)
        {
            var that = (global::iLights.Player)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_6_TableEntity_PartitionKey(object instance)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            return that.PartitionKey;
        }
        private void set_6_TableEntity_PartitionKey(object instance, object Value)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            that.PartitionKey = (global::System.String)Value;
        }
        private object get_7_TableEntity_RowKey(object instance)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            return that.RowKey;
        }
        private void set_7_TableEntity_RowKey(object instance, object Value)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            that.RowKey = (global::System.String)Value;
        }
        private object get_8_TableEntity_Timestamp(object instance)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            return that.Timestamp;
        }
        private void set_8_TableEntity_Timestamp(object instance, object Value)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            that.Timestamp = (global::System.DateTimeOffset)Value;
        }
        private object get_9_TableEntity_ETag(object instance)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            return that.ETag;
        }
        private void set_9_TableEntity_ETag(object instance, object Value)
        {
            var that = (global::Microsoft.WindowsAzure.Storage.Table.TableEntity)instance;
            that.ETag = (global::System.String)Value;
        }
        private object get_10_FocusTrainingxaml_coach(object instance)
        {
            var that = (global::iLights.FocusTrainingxaml)instance;
            return that.coach;
        }
        private void set_10_FocusTrainingxaml_coach(object instance, object Value)
        {
            var that = (global::iLights.FocusTrainingxaml)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_11_inTraining_training(object instance)
        {
            var that = (global::iLights.inTraining)instance;
            return that.training;
        }
        private void set_11_inTraining_training(object instance, object Value)
        {
            var that = (global::iLights.inTraining)instance;
            that.training = (global::iLights.Training)Value;
        }
        private object get_12_inTraining_counter(object instance)
        {
            var that = (global::iLights.inTraining)instance;
            return that.counter;
        }
        private void set_12_inTraining_counter(object instance, object Value)
        {
            var that = (global::iLights.inTraining)instance;
            that.counter = (global::System.Int32)Value;
        }
        private object get_13_inTraining_coach(object instance)
        {
            var that = (global::iLights.inTraining)instance;
            return that.coach;
        }
        private void set_13_inTraining_coach(object instance, object Value)
        {
            var that = (global::iLights.inTraining)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_14_playersPage_coach(object instance)
        {
            var that = (global::iLights.playersPage)instance;
            return that.coach;
        }
        private void set_14_playersPage_coach(object instance, object Value)
        {
            var that = (global::iLights.playersPage)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_15_playersPage_players(object instance)
        {
            var that = (global::iLights.playersPage)instance;
            return that.players;
        }
        private void set_15_playersPage_players(object instance, object Value)
        {
            var that = (global::iLights.playersPage)instance;
            that.players = (global::System.Collections.Generic.List<global::iLights.Player>)Value;
        }
        private object get_16_playersPage_scores(object instance)
        {
            var that = (global::iLights.playersPage)instance;
            return that.scores;
        }
        private void set_16_playersPage_scores(object instance, object Value)
        {
            var that = (global::iLights.playersPage)instance;
            that.scores = (global::System.Collections.Generic.List<global::iLights.Score>)Value;
        }
        private object get_17_Score_trainingName(object instance)
        {
            var that = (global::iLights.Score)instance;
            return that.trainingName;
        }
        private void set_17_Score_trainingName(object instance, object Value)
        {
            var that = (global::iLights.Score)instance;
            that.trainingName = (global::System.String)Value;
        }
        private object get_18_Score_trainingScore(object instance)
        {
            var that = (global::iLights.Score)instance;
            return that.trainingScore;
        }
        private void set_18_Score_trainingScore(object instance, object Value)
        {
            var that = (global::iLights.Score)instance;
            that.trainingScore = (global::System.Int32)Value;
        }
        private object get_19_Score_playerName(object instance)
        {
            var that = (global::iLights.Score)instance;
            return that.playerName;
        }
        private void set_19_Score_playerName(object instance, object Value)
        {
            var that = (global::iLights.Score)instance;
            that.playerName = (global::System.String)Value;
        }
        private object get_20_quickGamePage_counter(object instance)
        {
            var that = (global::iLights.quickGamePage)instance;
            return that.counter;
        }
        private void set_20_quickGamePage_counter(object instance, object Value)
        {
            var that = (global::iLights.quickGamePage)instance;
            that.counter = (global::System.Int32)Value;
        }
        private object get_21_chooseProgram_coach(object instance)
        {
            var that = (global::iLights.chooseProgram)instance;
            return that.coach;
        }
        private void set_21_chooseProgram_coach(object instance, object Value)
        {
            var that = (global::iLights.chooseProgram)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_22_topScoresPage_coach(object instance)
        {
            var that = (global::iLights.topScoresPage)instance;
            return that.coach;
        }
        private void set_22_topScoresPage_coach(object instance, object Value)
        {
            var that = (global::iLights.topScoresPage)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_23_topScoresPage_training(object instance)
        {
            var that = (global::iLights.topScoresPage)instance;
            return that.training;
        }
        private void set_23_topScoresPage_training(object instance, object Value)
        {
            var that = (global::iLights.topScoresPage)instance;
            that.training = (global::iLights.Training)Value;
        }
        private object get_24_topScoresPage_scores(object instance)
        {
            var that = (global::iLights.topScoresPage)instance;
            return that.scores;
        }
        private void set_24_topScoresPage_scores(object instance, object Value)
        {
            var that = (global::iLights.topScoresPage)instance;
            that.scores = (global::System.Collections.Generic.List<global::iLights.Score>)Value;
        }
        private object get_25_topScoresPageOfPlayer_coach(object instance)
        {
            var that = (global::iLights.topScoresPageOfPlayer)instance;
            return that.coach;
        }
        private void set_25_topScoresPageOfPlayer_coach(object instance, object Value)
        {
            var that = (global::iLights.topScoresPageOfPlayer)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_26_topScoresPageOfPlayer_scores(object instance)
        {
            var that = (global::iLights.topScoresPageOfPlayer)instance;
            return that.scores;
        }
        private void set_26_topScoresPageOfPlayer_scores(object instance, object Value)
        {
            var that = (global::iLights.topScoresPageOfPlayer)instance;
            that.scores = (global::System.Collections.Generic.List<global::iLights.Score>)Value;
        }
        private object get_27_trainingPage_coach(object instance)
        {
            var that = (global::iLights.trainingPage)instance;
            return that.coach;
        }
        private void set_27_trainingPage_coach(object instance, object Value)
        {
            var that = (global::iLights.trainingPage)instance;
            that.coach = (global::iLights.user)Value;
        }
        private object get_28_trainingPage_trainings(object instance)
        {
            var that = (global::iLights.trainingPage)instance;
            return that.trainings;
        }
        private void set_28_trainingPage_trainings(object instance, object Value)
        {
            var that = (global::iLights.trainingPage)instance;
            that.trainings = (global::System.Collections.Generic.List<global::iLights.Training>)Value;
        }
        private object get_29_Training_Name(object instance)
        {
            var that = (global::iLights.Training)instance;
            return that.Name;
        }
        private void set_29_Training_Name(object instance, object Value)
        {
            var that = (global::iLights.Training)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_30_Training_Description(object instance)
        {
            var that = (global::iLights.Training)instance;
            return that.Description;
        }
        private void set_30_Training_Description(object instance, object Value)
        {
            var that = (global::iLights.Training)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_31_Training_currentPlayer(object instance)
        {
            var that = (global::iLights.Training)instance;
            return that.currentPlayer;
        }
        private void set_31_Training_currentPlayer(object instance, object Value)
        {
            var that = (global::iLights.Training)instance;
            that.currentPlayer = (global::iLights.Player)Value;
        }
        private object get_32_Training_Time(object instance)
        {
            var that = (global::iLights.Training)instance;
            return that.Time;
        }
        private void set_32_Training_Time(object instance, object Value)
        {
            var that = (global::iLights.Training)instance;
            that.Time = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::iLights.iLights_XamlTypeInfo.XamlMember xamlMember = null;
            global::iLights.iLights_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "iLights.AddPlayerPage.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.AddPlayerPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_0_AddPlayerPage_coach;
                xamlMember.Setter = set_0_AddPlayerPage_coach;
                break;
            case "iLights.addTrainingPage.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.addTrainingPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_1_addTrainingPage_coach;
                xamlMember.Setter = set_1_addTrainingPage_coach;
                break;
            case "iLights.choosePlayerPageTraining.training":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.choosePlayerPageTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "training", "iLights.Training");
                xamlMember.Getter = get_2_choosePlayerPageTraining_training;
                xamlMember.Setter = set_2_choosePlayerPageTraining_training;
                break;
            case "iLights.choosePlayerPageTraining.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.choosePlayerPageTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_3_choosePlayerPageTraining_coach;
                xamlMember.Setter = set_3_choosePlayerPageTraining_coach;
                break;
            case "iLights.choosePlayerPageTraining.players":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.choosePlayerPageTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "players", "System.Collections.Generic.List`1<iLights.Player>");
                xamlMember.Getter = get_4_choosePlayerPageTraining_players;
                xamlMember.Setter = set_4_choosePlayerPageTraining_players;
                break;
            case "iLights.Player.Name":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Player");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_5_Player_Name;
                xamlMember.Setter = set_5_Player_Name;
                break;
            case "Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "PartitionKey", "String");
                xamlMember.Getter = get_6_TableEntity_PartitionKey;
                xamlMember.Setter = set_6_TableEntity_PartitionKey;
                break;
            case "Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "RowKey", "String");
                xamlMember.Getter = get_7_TableEntity_RowKey;
                xamlMember.Setter = set_7_TableEntity_RowKey;
                break;
            case "Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "Timestamp", "System.DateTimeOffset");
                xamlMember.Getter = get_8_TableEntity_Timestamp;
                xamlMember.Setter = set_8_TableEntity_Timestamp;
                break;
            case "Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.WindowsAzure.Storage.Table.TableEntity");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "ETag", "String");
                xamlMember.Getter = get_9_TableEntity_ETag;
                xamlMember.Setter = set_9_TableEntity_ETag;
                break;
            case "iLights.FocusTrainingxaml.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.FocusTrainingxaml");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_10_FocusTrainingxaml_coach;
                xamlMember.Setter = set_10_FocusTrainingxaml_coach;
                break;
            case "iLights.inTraining.training":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.inTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "training", "iLights.Training");
                xamlMember.Getter = get_11_inTraining_training;
                xamlMember.Setter = set_11_inTraining_training;
                break;
            case "iLights.inTraining.counter":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.inTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "counter", "Int32");
                xamlMember.Getter = get_12_inTraining_counter;
                xamlMember.Setter = set_12_inTraining_counter;
                break;
            case "iLights.inTraining.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.inTraining");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_13_inTraining_coach;
                xamlMember.Setter = set_13_inTraining_coach;
                break;
            case "iLights.playersPage.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.playersPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_14_playersPage_coach;
                xamlMember.Setter = set_14_playersPage_coach;
                break;
            case "iLights.playersPage.players":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.playersPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "players", "System.Collections.Generic.List`1<iLights.Player>");
                xamlMember.Getter = get_15_playersPage_players;
                xamlMember.Setter = set_15_playersPage_players;
                break;
            case "iLights.playersPage.scores":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.playersPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "scores", "System.Collections.Generic.List`1<iLights.Score>");
                xamlMember.Getter = get_16_playersPage_scores;
                xamlMember.Setter = set_16_playersPage_scores;
                break;
            case "iLights.Score.trainingName":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Score");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "trainingName", "String");
                xamlMember.Getter = get_17_Score_trainingName;
                xamlMember.Setter = set_17_Score_trainingName;
                break;
            case "iLights.Score.trainingScore":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Score");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "trainingScore", "Int32");
                xamlMember.Getter = get_18_Score_trainingScore;
                xamlMember.Setter = set_18_Score_trainingScore;
                break;
            case "iLights.Score.playerName":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Score");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "playerName", "String");
                xamlMember.Getter = get_19_Score_playerName;
                xamlMember.Setter = set_19_Score_playerName;
                break;
            case "iLights.quickGamePage.counter":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.quickGamePage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "counter", "Int32");
                xamlMember.Getter = get_20_quickGamePage_counter;
                xamlMember.Setter = set_20_quickGamePage_counter;
                break;
            case "iLights.chooseProgram.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.chooseProgram");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_21_chooseProgram_coach;
                xamlMember.Setter = set_21_chooseProgram_coach;
                break;
            case "iLights.topScoresPage.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.topScoresPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_22_topScoresPage_coach;
                xamlMember.Setter = set_22_topScoresPage_coach;
                break;
            case "iLights.topScoresPage.training":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.topScoresPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "training", "iLights.Training");
                xamlMember.Getter = get_23_topScoresPage_training;
                xamlMember.Setter = set_23_topScoresPage_training;
                break;
            case "iLights.topScoresPage.scores":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.topScoresPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "scores", "System.Collections.Generic.List`1<iLights.Score>");
                xamlMember.Getter = get_24_topScoresPage_scores;
                xamlMember.Setter = set_24_topScoresPage_scores;
                break;
            case "iLights.topScoresPageOfPlayer.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.topScoresPageOfPlayer");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_25_topScoresPageOfPlayer_coach;
                xamlMember.Setter = set_25_topScoresPageOfPlayer_coach;
                break;
            case "iLights.topScoresPageOfPlayer.scores":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.topScoresPageOfPlayer");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "scores", "System.Collections.Generic.List`1<iLights.Score>");
                xamlMember.Getter = get_26_topScoresPageOfPlayer_scores;
                xamlMember.Setter = set_26_topScoresPageOfPlayer_scores;
                break;
            case "iLights.trainingPage.coach":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.trainingPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "coach", "iLights.user");
                xamlMember.Getter = get_27_trainingPage_coach;
                xamlMember.Setter = set_27_trainingPage_coach;
                break;
            case "iLights.trainingPage.trainings":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.trainingPage");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "trainings", "System.Collections.Generic.List`1<iLights.Training>");
                xamlMember.Getter = get_28_trainingPage_trainings;
                xamlMember.Setter = set_28_trainingPage_trainings;
                break;
            case "iLights.Training.Name":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Training");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_29_Training_Name;
                xamlMember.Setter = set_29_Training_Name;
                break;
            case "iLights.Training.Description":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Training");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_30_Training_Description;
                xamlMember.Setter = set_30_Training_Description;
                break;
            case "iLights.Training.currentPlayer":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Training");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "currentPlayer", "iLights.Player");
                xamlMember.Getter = get_31_Training_currentPlayer;
                xamlMember.Setter = set_31_Training_currentPlayer;
                break;
            case "iLights.Training.Time":
                userType = (global::iLights.iLights_XamlTypeInfo.XamlUserType)GetXamlTypeByName("iLights.Training");
                xamlMember = new global::iLights.iLights_XamlTypeInfo.XamlMember(this, "Time", "String");
                xamlMember.Getter = get_32_Training_Time;
                xamlMember.Setter = set_32_Training_Time;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::iLights.iLights_XamlTypeInfo.XamlSystemBaseType
    {
        global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::iLights.iLights_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

